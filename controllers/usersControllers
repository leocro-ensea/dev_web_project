
const db = require("../routes/database")




exports.getAllUsers = function (req, res) {
	db.all("SELECT * FROM users", [], (err, rows) => {
		if (err) {
			res.status(500).json({ error: err.message })
		} else {
			res.json(rows)
		}
	})
}

exports.createNewUser = (req, res) => {
	// récupérer toutes les données qui arrivent dans le corps de la requête (body)
	const { firstName, lastName } = req.body

    function isAlphanumeric(str) {
        const regex = /^[a-zA-Z]+$/
        return regex.test(str)
    }

    if(!firstName) 
        return res.status(400).json({error: "The first name is required !"})
        
    if (typeof firstName !== "string")
        return res.status(400).json({error: "That's a weird name !"})
        
    if (!isAlphanumeric(firstName))
        return res.status(400).json({ error: "Ce nom n'est pas autorisé !" })
	
    if (!firstName || !lastName)
		return res
			.status(400)
			.json({ error: "Le prénom et le nom de famille sont requis !" })


    db.run(
            "INSERT INTO users (firstName, lastName) VALUES (?, ?)",
            [firstName, lastName],
            function (err) {
                if (err) {
                    res.status(500).json({ error: err.message })
                } else {
                    res.status(201).json({ id: this.lastID, firstName })
                }
            
            }

        )
}


exports.updateUser = (req, res) => {
	// récupérer toutes les données qui arrivent dans le corps de la requête (body)
	const { firstName, lastName, role} = req.body
    const id = parseInt(req.params.id)

	// trouve son index, verifier si le userIndex est positive
	const userIndex = users.findIndex((user) => user.id === id)

	// utilisateur non trouvé
	if (userIndex < 0)
		return res.status(404).json({ msg: "utilisateur non trouvé" })

	// si el est trouvé, 

	if (firstName) users[userIndex].firstName = firstName
	if (lastName) users[userIndex].lastName = lastName
	if (role) users[userIndex].role = role

    res.json({
		msg: "utilisateur mis à jour",
		user: users[userIndex],
	})
}